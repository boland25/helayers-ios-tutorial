/*******************************************************************************
 *
 *   OCO Source Materials
 *   5737-A56
 *   Â© Copyright IBM Corp. 2017
 *
 *   The source code for this program is not published or other-wise divested
 *   of its trade secrets, irrespective of what has been deposited with the
 *   U.S. Copyright Office.
 ******************************************************************************/

#ifndef BOOTSTRAP_CHEBYSHEV_H_
#define BOOTSTRAP_CHEBYSHEV_H_

#include <vector>
#include "helayers/hebase/HeContext.h"
#include "ManyCSs.h"

namespace helayers {

/// @brief A helper class for computing Chebyshev polynomials
class Chebyshev
{

  // the two dimensional arrays manyCsins and manyCcoss defined in the file
  // ManyCSs.h included above
  // are the coefficients of the chebyshev polynomials used by spt() and spt_h()
  // etc.
  // the file ManyCSs.h was generated by the python code (function
  // compute_manySCs_and_writeouttofile())
  // for values between minnT=4 and maxnT=50.  less than four is ridiculous, and
  // if you want more
  // than 50 you can go back to the python and alter the parameters to generate
  // more.

public:
  ///@brief Minimum number of terms
  int minnT;
  ///@brief Maximum number of terms
  int maxnT;

  ///@brief Construct a Chebyshev class, sets minnT to 13.
  /// For less than that, the errors are ridiculous
  Chebyshev() : minnT(13), maxnT(50) {}

  ~Chebyshev() {}

  ///@brief Returns the coefficients for the Chebyshev polynomial of Sin
  ///@param i index of Chebyshev term
  std::vector<long double> getCsin(int i);
  ///@brief Returns the coefficients for the Chebyshev polynomial of Cos
  ///@param i index of Chebyshev term
  std::vector<long double> getCcos(int i);
};
} // namespace helayers

#endif /* BOOTSTRAP_CHEBYSHEV_H_ */
